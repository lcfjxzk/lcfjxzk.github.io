<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>人中车可的博客</title>
    <link>https://xiongzhongke.xyz/</link>
    <description>Recent content on 人中车可的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Mon, 17 Feb 2020 16:05:32 +0800</lastBuildDate>
    
	<atom:link href="https://xiongzhongke.xyz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JQuery学习总结</title>
      <link>https://xiongzhongke.xyz/posts/jquery%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 17 Feb 2020 16:05:32 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/jquery%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>内容来源：阮一峰的网络日志/jQuery设计思想
http://www.ruanyifeng.com/blog/2011/07/jquery_fundamentals.html
一、jQuery简介  jQuery是目前使用最广泛的javascript函数库。 jQuery设计模式：设计模式就是对通用代码取一个名字。 对于网页开发者来说，学会jQuery是必要的，为将来学习更高级的库打下基础。 互联网上最好的jQuery入门教材，是Rebecca Murphey写的《jQuery基础》（jQuery Fundamentals）。 全面掌握jQuery，遇到问题的时候，心里有底，基本知道使用它的哪一个功能，然后可以迅速从手册中找到具体的写法。  二、jQuery 如何获取元素 jQuery的基本设计思想和主要用法，就是&amp;quot;选择某个网页元素，然后对其进行某种操作&amp;rdquo;。这是它区别于其他Javascript库的根本特点。
jQuery(&amp;#34;.test&amp;#34;) // 选择class为test的div元素 $(&amp;#39;div.myClass&amp;#39;) // 选择class为myClass的div元素 $(&amp;#39;div&amp;#39;).filter(&amp;#39;.myClass&amp;#39;); //选择class等于myClass的div元素 jQuery(&amp;#34;.test&amp;#34;).find(&amp;#34;.child&amp;#34;)//选择class为test的div元素的子元素中class为child的子元素  $(document) //选择整个文档对象 $(&amp;#39;#ID&amp;#39;)//通过id选择元素 $(&amp;#39;div.red&amp;#39;)// 选择class为red的div元素 jQuery特有的api
$(&amp;#39;div:first&amp;#39;)//选择网页中第一个div元素 三、jQuery 的链式操作是怎样的 jQuery设计思想之三，就是最终选中网页元素以后，可以对它进行一系列操作，并且所有操作可以连接在一起，以链条的形式写出来，比如：
$(&amp;#39;div&amp;#39;).find(&amp;#39;h3&amp;#39;).eq(2).html(&amp;#39;Hello&amp;#39;); 分解如下：
$(&amp;#39;div&amp;#39;) //找到div元素 　.find(&amp;#39;h3&amp;#39;) //选择其中的h3元素 　.eq(2) //选择第3个h3元素 　.html(&amp;#39;Hello&amp;#39;); //将它的内容改为Hello jQuery还提供了.end()方法，使得结果集可以后退一步：
$(&amp;#39;div&amp;#39;) .find(&amp;#39;h3&amp;#39;)//选择其中的h3元素 　.eq(2)//选择第3个h3元素 　.html(&amp;#39;Hello&amp;#39;)//将它的内容改为Hello 　.end() //退回到选中所有的h3元素的那一步 　.eq(0) //选中第一个h3元素 　.html(&amp;#39;World&amp;#39;); //将它的内容改为World 四、jQuery 如何创建元素 创建新元素的方法非常简单，只要把新元素直接传入jQuery的构造函数就行了：
$(&amp;#39;&amp;lt;p&amp;gt;Hello&amp;lt;/p&amp;gt;&amp;#39;); $(&amp;#39;&amp;lt;li class=&amp;#34;new&amp;#34;&amp;gt;new list item&amp;lt;/li&amp;gt;&amp;#39;); $(&amp;#39;ul&amp;#39;).</description>
    </item>
    
    <item>
      <title>第35课DOM编程</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC35%E8%AF%BEdom%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sun, 09 Feb 2020 09:18:29 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC35%E8%AF%BEdom%E7%BC%96%E7%A8%8B/</guid>
      <description>一、DOM简介 DOM就是Document Object Model js用document操作网页。
 jquery操作dom vue操作dom react操作dom  二、DOM的API 如何获取元素(Element/tag)的API。 获取的div等东西，都是一个对象。
window.idxxx或者直接idxxx//这个大部分人不知道 //以下三种基本不用，除非要兼容IE document.getElementsByTagName(&amp;#39;div&amp;#39;) document.getElementsByTagName(&amp;#39;div&amp;#39;)[0] document.getElementsByClassName(&amp;#39;red&amp;#39;)[0] //------ document.querySelector(&amp;#39;#idxxx&amp;#39;) document.querySelectorAll(&amp;#39;.red&amp;#39;)[0] DOM的API都很长，不方便使用。但是必须要学，因为不学就看不懂jQuery，虚拟DOM等内容。
元素的6层原型链 console.dir(div)//看元素的6层原型链 三、API增删改查 四、DOM操作跨线程 浏览器功能：
 渲染引擎：渲染HTML\CSS JS引擎：执行JS代码 以上两个引擎在不同的线程。  div1本来只能存在于内存里面，但是
document.body.appendChild(div1) 让div1出现在了页面上。
DOM很难用，怎么向面试官证明你会dom？  自己封装一个dom库 写一篇关于dom的博客  </description>
    </item>
    
    <item>
      <title>第34课数据结构1</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC34%E8%AF%BE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%841/</link>
      <pubDate>Thu, 06 Feb 2020 17:41:51 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC34%E8%AF%BE%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%841/</guid>
      <description>沙盒编辑网址：https://codesandbox.io/s/vanilla </description>
    </item>
    
    <item>
      <title>20200203直播课</title>
      <link>https://xiongzhongke.xyz/posts/20200203%E7%9B%B4%E6%92%AD%E8%AF%BE/</link>
      <pubDate>Mon, 03 Feb 2020 20:40:29 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/20200203%E7%9B%B4%E6%92%AD%E8%AF%BE/</guid>
      <description> typescript类型、泛型等概念的理解 赋值作用域 两个老师的课程表  https://mp.weixin.qq.com/s/mnQffXx7fqqwTmYXT5LABA?
https://mp.weixin.qq.com/s/kX_cJY3vBhprmHTfxef8tw?
现在的课程比以前的版本多了大约50%的内容  </description>
    </item>
    
    <item>
      <title>第33课排序算法  循环算法</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC33%E8%AF%BE%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95-%E5%BE%AA%E7%8E%AF%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 03 Feb 2020 16:56:26 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC33%E8%AF%BE%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95-%E5%BE%AA%E7%8E%AF%E7%AE%97%E6%B3%95/</guid>
      <description>一、选择排序法：递归和循环 minIndex 重写&amp;ndash;&amp;gt;选择排序的循环写法：for 循环遍历 numbers //---第一步找到一组数中的最小数值 let minIndex = numbers =&amp;gt; { let index = 0; //把下标为0的第一个数记为index  for (let i = 1; i &amp;lt; numbers.length; i++) { //令i的初始值为1，即从下标为1的第二个数开始，如果i&amp;lt;数组长度，那么进入for循环，每次循环结束，i加1.  if (numbers[i] &amp;lt; numbers[index]) { //如果遍历的本轮数字比当前的index数字小  index = i; //那么把小的记为新的index(index可以看作一个变量)  } } //如果i超过了数组长度，跳出for循环，返回当前index  return index; //遍历numbers里面所有数，再返回index，即得到最小值的下标。 }; //---第二步将一组数从小到大排列 let sort = numbers =&amp;gt; { for (let i = 0; i &amp;lt; numbers.length - 1; i++) { //令i的初始值为0，即从下标为0的第一个数开始，如果i&amp;lt;数组长度-1，那么进入for循环，每次循环结束，i加1  console.</description>
    </item>
    
    <item>
      <title>第32课排序算法</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC32%E8%AF%BE%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 03 Feb 2020 09:12:08 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC32%E8%AF%BE%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>一、排序算法的思路： 第一步，求出任意数组的最小值 Math.min; //找数组中的最小数，JS中内置了Math.min //首字母大写的一般是构造函数，如Object。但Math是一个特例。 如何理解递归思路  推荐书籍 SICP：计算机程序的构造和解释。 用代入法快速理解递归。 用调用栈快速理解递归。  析构赋值 let minOf2 = ([a, b]) =&amp;gt; (a &amp;lt; b ? a : b); let min = numbers =&amp;gt; { if (numbers.length &amp;gt; 2) { //当数组长度大于2时  return min([numbers[0], min(numbers.slice(1))]); //用第0个数和&amp;#39;除去第0个数的后面的一组数中的最小值&amp;#39;求最小值。  } else { //当数组长度为2时  return Math.min.apply(null, numbers); //调用函数Math.min,用apply把这组数展开，让min去调用。  } }; //上述代码一直循环到最简单的长度为2的数组，开始调用Math.min。化解为多个嵌套的长度为2的数组，循环求解。 上述代码就是递归，特点如下：  函数 min 不停调用自己，每次调用的参数略有不同。 当满足某个简单条件时，则实现一个简单的调用。  第二步，对任意数组从小到大排列 从 sort2/sort3/sort4 推出 sort 函数 sort3</description>
    </item>
    
    <item>
      <title>第31课算法与数据结构伪代码与流程图</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC31%E8%AF%BE%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%AA%E4%BB%A3%E7%A0%81%E4%B8%8E%E6%B5%81%E7%A8%8B%E5%9B%BE/</link>
      <pubDate>Sun, 02 Feb 2020 12:09:50 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC31%E8%AF%BE%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BC%AA%E4%BB%A3%E7%A0%81%E4%B8%8E%E6%B5%81%E7%A8%8B%E5%9B%BE/</guid>
      <description>一、伪代码与流程图 二、快速入门数据结构 推荐八种排序算法，把八种排序算法学会，基本上可以学会5-6种数据结构。有几种都是用的数组。 学会3-4种数据结构，基本上就可以面试了。
三、算法 算法就是把你解决一个问题的思路表达出来。
 </description>
    </item>
    
    <item>
      <title>30课JS总结</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC30%E8%AF%BEjs%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 30 Jan 2020 16:10:44 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC30%E8%AF%BEjs%E6%80%BB%E7%BB%93/</guid>
      <description>知识点 基本概念 内存、变量、数据类型、对象
控制语句 if&amp;hellip;else&amp;hellip;
for&amp;hellip;
对象  原型、原型链 对象分类 new一个新对象 构造函数 this的隐式传递和显式传递  难点：JS三座大山 原型、this、AJAX
第一个重要知识：JS公式（不要理解，直接背诵） 对象.__proto__ === 其构造函数.prototype JS唯一公式，如果不会就套公式。
第二个重要知识：根公理 Object.prototype是所有对象的(直接或间接)原型。
所谓的公理，就是规定好的。
第三个重要知识：函数公理 所有函数都是由Function构造的。
把第一个公理和第三个公理结合起来，得到下面式子：
任何函数.__proto __ === Function.prototype 任意函数有Object/Array/Function
以上三个公理不容置疑，其他的都可以质疑。
JS公式、根公理、函数公理，基于这三个知识和其他基础定义可以推出JS世界。 对象里面没有另一个对象，只有另一个对象的地址。
Object.prototype.__proto__ === null//根据公式二 --&amp;gt; true </description>
    </item>
    
    <item>
      <title>第29课JS运算符&amp;前端面试题</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC29%E8%AF%BEjs%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Tue, 28 Jan 2020 16:26:33 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC29%E8%AF%BEjs%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>一、需要记忆的特例（可能的前端面试题）  余数 x%7 ：-1 % 7 = -1 指数 x**3 自增自减x++/++x/x&amp;ndash;/&amp;ndash;x  var a = 1 a++ //值为1，值为++之前的值 ++a //值为2，值为++之后的值 ++ //让a加1 a++/a&amp;ndash;，a在前值为前； ++a/&amp;ndash;a，a在后值为后
 或且非  ||
&amp;amp;&amp;amp;
!
 求值运算符  var a = 8 +a //取a的值，a=8   负数运算符  var a = 8 -a //取a的负值，a=-8 注意：永远不要用&amp;quot;==&amp;quot;要用&amp;quot;===&amp;rdquo;（可参见真值表） &amp;ldquo;==&amp;quot;会自动类型转换，导致JS三位一体。 [] !== []//空数组不全等于空数组 {} !== {}//空对象不全等于空对象 NaN !== NaN 二、防御性编程（可选链语法）/布尔运算符  以防console不存在报错（console有可能被人改写）  console &amp;amp;&amp;amp; console.log &amp;amp;&amp;amp; console.log(&amp;#34;hi&amp;#34;) //如果前两个都成立，我就执行第三个 以下为明年最新的防御性编程语法</description>
    </item>
    
    <item>
      <title>JS函数的执行时机</title>
      <link>https://xiongzhongke.xyz/posts/js%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Fri, 24 Jan 2020 13:33:19 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/js%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</guid>
      <description>1 解释为什么如下代码会打印 6 个 6 let i = 0; //声明变量i=0 for (i = 0; i &amp;lt; 6; i++) { setTimeout(() =&amp;gt; { console.log(i); }, 0); //令i=0,1,2,3,4,5循环六次,每次循环结束，i=6 } 如果没有setTimeout，每次判断完i&amp;lt;6后，直接打印当前的 i，也就是 i=0,1,2,3,4,5; 即打印 i 在循环结束前。
因为有setTimeout，指过一会儿后，尽快打印出 i，因此每次循环结束后才会打印 i，而每次循环结束后 i=6。所以会打印 6 个 6。
2 写出让上面代码打印 0、1、2、3、4、5 的方法 for (let i = 0; i &amp;lt; 6; i++) { setTimeout(() =&amp;gt; { console.log(i); }, 0); } </description>
    </item>
    
    <item>
      <title>第27课JS函数</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC27%E8%AF%BEjs%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 18 Jan 2020 23:31:33 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC27%E8%AF%BEjs%E5%87%BD%E6%95%B0/</guid>
      <description>二、JS函数作用域 例1
function f1(){ let a =1 function f2(){ let a =2 console.log(a) } console.log(a) a=3 f2() } f1() 返回值
1 2 例2
function f1(){ let a =1 function f2(){ let a =2 function f3(){ console.log(a) } a=22 f3()//表示启动f3()但没有a的值，console.log(a)进入f2()  } console.log(a) a=100 f2() } f1() 返回值
1 22 </description>
    </item>
    
    <item>
      <title>第26课JS数组</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC26%E8%AF%BEjs%E6%95%B0%E7%BB%84/</link>
      <pubDate>Wed, 15 Jan 2020 21:29:18 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC26%E8%AF%BEjs%E6%95%B0%E7%BB%84/</guid>
      <description>一、数组是什么 二、数组增删改查  增 删  删除头部元素
arr.shift(); //arr被修改，并返回被删元素 删除尾部元素
arr.pop(); //arr被修改，并返回被删元素 删除中间元素
arr.splice(x, 1); //从x号元素开始，从左至右删除一个元素 arr.splice(x, 3); //从x号元素开始，从左至右删除三个元素 arr.splice(x, 1, &amp;#34;z&amp;#34;); //并在删除位置加入&amp;#39;z&amp;#39; arr.splice(x, 1, &amp;#34;z&amp;#34;, &amp;#34;k&amp;#34;); //并在删除位置加入&amp;#39;z&amp;#39;,&amp;#39;k&amp;#39;  改 查   查看所有属性名  let arr = [1, 2, 3, 4, 5]; arr.x = &amp;#34;xxx&amp;#34;; Object.keys(arr); for (let key in arr) { console.log(`${key}:${arr[key]}`); } for 循环是访问数组比较常见的形式。
查看数字（字符串）属性名和值。
查看单个属性  查找某个元素是否在数组里。
arr.indexOf(item); //存在返回索引，否则返回-1 使用条件查找元素
arr.find(item =&amp;gt; item % 2 === 0); //找第一个偶数 使用条件查找元素的索引</description>
    </item>
    
    <item>
      <title>第25课 JS对象分类</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC25%E8%AF%BE-js%E5%AF%B9%E8%B1%A1%E5%88%86%E7%B1%BB/</link>
      <pubDate>Tue, 14 Jan 2020 08:42:03 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC25%E8%AF%BE-js%E5%AF%B9%E8%B1%A1%E5%88%86%E7%B1%BB/</guid>
      <description></description>
    </item>
    
    <item>
      <title>第24课 JS对象基本用法</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC24%E8%AF%BE-js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 11 Jan 2020 22:11:05 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC24%E8%AF%BE-js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>一、对象的定义、声明对象的两种语法  对象的定义   无序的数据集合 键值对的集合  let obj = { name: &amp;#34;frank&amp;#34;, age: 18 }; let obj = new Object({ name: &amp;#34;frank&amp;#34; }); console.log({ name: &amp;#34;frank&amp;#34;, age: 18 }); 对象的属性  键 key&amp;ndash;&amp;gt;&#39;name&#39; 也叫对象的属性名。
键名是字符串。键名的引号可以省略，省略后只能写标识符，不能写汉字或表情符 emoji。
值 value&amp;ndash;&amp;gt;&#39;frank&#39; 也叫对象的属性值。
键值对&amp;ndash;&amp;gt;&#39;name&#39;:&#39;frank&#39;
Object.keys(obj)可以得到 obj 的所有 key。
变量作属性名  let p1 =&amp;#39;name&amp;#39; let obj ={p1:&amp;#39;frank&amp;#39;},属性名为字符串&amp;#39;p1&amp;#39; let obj = {[p1]:&amp;#39;frank&amp;#39;},这样写,属性名为变量p1,变量求值后属性名为&amp;#39;name&amp;#39; 隐藏的属性名  JS 中每一个对象都有一个隐藏属性，隐藏属性存储着共有属性组成的对象的地址，这个共有属性组成的对象叫做原型。
二、如何删除对象的属性 delete obj.xxx; 或; delete obj[&amp;#34;xxx&amp;#34;]; 以上代码删除 obj 的 xxx 属性名和属性值。</description>
    </item>
    
    <item>
      <title>第22课 JS语法介绍</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC22%E8%AF%BE-js%E8%AF%AD%E6%B3%95%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 09 Jan 2020 20:43:19 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC22%E8%AF%BE-js%E8%AF%AD%E6%B3%95%E4%BB%8B%E7%BB%8D/</guid>
      <description>一、什么是表达式和语句 表达式
1 + 2; add(1, 2); console.log; console.log(3); 语句
var a = 1;  值和返回值不一样 大小写敏感 大部分空格没有实际意义 大部分回车没有实际意义，但 return 后面不能回车  二、标识符的规则 第一个字符，可以是 Unicode 字母或$或_或中文，第一个字符后面的字符，还可以有数字。
var _ = 1; var $ = 2; var __ = 6; var 你好 = &amp;#34;hi&amp;#34;; 三、if else 语句  if(表达式){语句 1}else{语句 2}；  如果(表达式)为真，执行{语句 1}；
如果(表达式)为假，执行{语句 2}；
switch 语句  switch (fruit){ case &amp;#34;banana&amp;#34;: break; case &amp;#34;apple&amp;#34;: break; default: } 问号冒号表达式  表达式 1？表达式 2：表达式 3</description>
    </item>
    
    <item>
      <title>第19课 JavaScript的诞生</title>
      <link>https://xiongzhongke.xyz/posts/%E7%AC%AC19%E8%AF%BE-javascript%E7%9A%84%E8%AF%9E%E7%94%9F/</link>
      <pubDate>Thu, 02 Jan 2020 22:45:26 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E7%AC%AC19%E8%AF%BE-javascript%E7%9A%84%E8%AF%9E%E7%94%9F/</guid>
      <description>一、网景公司和 sun 公司 1994 年，网景公司（Netscape）发布了 Navigator 浏览器 0.9 版。这是历史上第一个比较成熟的网络浏览器，轰动一时。但是，这个版本的浏览器只能用来浏览，不具备与访问者互动的能力。&amp;hellip;&amp;hellip;网景公司急需一种网页脚本语言，使得浏览器可以与网页互动。
网景公司当时有两个选择：一个是采用现有的语言，比如 Perl、Python、Tcl、Scheme 等等，允许它们直接嵌入网页；另一个是发明一种全新的语言。
就在这时，发生了另外一件大事：1995 年 Sun 公司将 Oak 语言改名为 Java，正式向市场推出。sun 公司大肆宣传 Java 会成为未来的主宰。
网景公司与 Sun 公司结成联盟。因此，Javascript 后来就是网景和 Sun 两家公司一起携手推向市场的，这种语言被命名为&amp;quot;Java+script&amp;quot;并不是偶然的。
二、34 岁的系统程序员 Brendan Eich 1995 年 4 月，网景公司录用了 34 岁的系统程序员 Brendan。Brendan Eich 的主要方向和兴趣是函数式编程，网景公司招聘他的目的，是研究将 Scheme 语言作为网页脚本语言的可能性。Brendan Eich 本人也是这样想的，以为进入新公司后，会主要与 Scheme 语言打交道。
1995 年 5 月，网景公司做出决策，未来的网页脚本语言必须&amp;quot;看上去与 Java 足够相似&amp;rdquo;，但是比 Java 简单，使得非专业的网页作者也能很快上手。这个决策实际上将 Perl、Python、Tcl、Scheme 等非面向对象编程的语言都排除在外了。
Brendan Eich 被指定为这种&amp;quot;简化版 Java 语言&amp;quot;的设计师。但是，他对 Java 一点兴趣也没有。为了应付公司安排的任务，他只用 10 天时间就把 Javascript 设计出来了。
Javascript 设计思路如下：</description>
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>https://xiongzhongke.xyz/posts/%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Sat, 28 Dec 2019 19:48:46 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E6%B5%85%E6%9E%90url/</guid>
      <description>一、URL 包含哪几部分，每部分分别有什么作用 A Uniform Resource Locator。 例子：https://www.baidu.com/s?wd=hello&amp;amp;rsv_spt=1#5
 协议 =&amp;gt; https:// 域名 =&amp;gt; www.baidu.com IP =&amp;gt; 220.181.38.148 / 39.156.69.79（百度IP）  Internet Protocal。定位一台设备；封装数据报文，以跟其他设备交流。
 端口 =&amp;gt; 一台服务器可以提供很多服务。每个服务对应一个号码，这个号码叫端口号port。  http服务最好用80端口（http://127.0.0.1:8080/文件名 本地电脑调试）
https服务最好用443端口
FTP服务（大学校园网用）最好用21端口
一共有65535个端口。0~1023端口留给系统/管理员使用。其他端口给普通用户使用。比如http-server默认使用8080端口。一个端口如果被占用，你就只能换一个端口。 设置端口号：
hs -c-1 -p 1200 就使用新的端口号来访问本地文件http://127.0.0.1:1200/index.html
 路径 =&amp;gt; /s, 用来判断你要访问什么网页。 查询参数 =&amp;gt; ?wd=hello&amp;amp;rsv_spt=1，判断你要访问该网页的第几页 锚点 =&amp;gt; 访问该页面的哪一块内容，实现文档内部的定位。  IP用来定位一个设备，端口用来定位一个设备的一个服务，有了IP和端口，我们就可以定位一个设备提供的服务。比如百度的设备提供的网页服务，腾讯的设备提供的聊天服务，或者淘宝的设备提供的支付服务。这些服务都可以通过IP和端口唯一确定。 IP和端口缺一不可。 二、IP 的作用是什么，ping 命令怎么用  Internet Protocal。 主要约定两件事：（1）定位一台设备；（2）封装数据报文，以跟其他设备交流。 外网IP：路由器对应一个外网IP，是电信分配给路由器的。（这里的外网指：你的路由器之外的网络），例如：58.51.255.38(查询ip138.com可以看到自己路由器分配的外网IP)，当路由器重启，会重新分配一个外网ip给你。 内网IP：路由器会在你家里创建一个内网，内网中的设备（电脑，手机，ipad）使用内网IP。这个IP的格式一般来说是/192.168.xxx.xxx/。  内网IP是路由器自己分配给自己的。一般路由器会给自己分配一个好记的内网IP/192.168.1.1/，路由器会给内网中的每一个设备分配一个内网IP，例如电脑是192.168.1.2，手机是192.168.1.3，以此类推。
外网和内网是两个隔绝的空间，无法互通。唯一的联通点是路由器。所以路由器被叫做“网关”。
http://192.168.1.58:8080/文件名 本地手机调试
http://127.0.0.1:8080/文件名 本地电脑调试
通过路径C:\Windows\System32\drivers\etc\hosts，以管理员身份打开hosts文件，加入一行代码
127.0.0.1 xiongzk 可以改变调试网址为：http://xiongzk:8080/文件名</description>
    </item>
    
    <item>
      <title>CSS知识总结</title>
      <link>https://xiongzhongke.xyz/posts/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:11 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      <description>一、CSS布局 布局是屏幕平面上的。   float布局
  flex布局
  一维布局用flex
经验
 永远不要把我width和height写死，除非特殊说明。 用min-width/max-width/min-height/max-height flex可以基本满足所有需求 flex和margin-xxx：auto配合有意外的效果。  Grid布局  二维布局用Grid，适合不规则布局。
https://css-tricks.com/snippets/css/complete-guide-grid/
二、CSS定位 定位是垂直于屏幕的。  position属性   static 默认值，待在文档流里 relative 相对定位 absolute 绝对定位 fixed 固定定位 sticky 粘滞定位  经验：
 如果你写了absolute,一般都要补一个relative 如果你写了absolute或fixed，一定要补top和left sticky兼容性很差，主要用于面试装逼。  层叠上下文  Google搜索“MDN 层叠上下文”
https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context
 每一个层叠上下文就是一个新的小世界（作用域） 这个小世界里面的z-index跟外界无关 处在同一个小世界的z-index才能比较。 记住负的z-index逃不出小世界。  http://js.jirengu.com/modez/1/edit?html,css,output
CSS定位回顾  盒模型中的背景 浮动是怎么脱离文档流的 position的五个取值 z-index的用法 层叠上下文是什么 负z-index  三、浏览器渲染原理  根据HTML构建HTML树（DOM） 根据CSS构建CSS树（CSSOM） 将两棵树合并成一颗渲染树（render tree） Layout布局（文档流、盒模型、计算大小和位置） Paint绘制（把边框颜色、文字颜色、阴影等画出来） Compose合成（根据层叠关系展示画面）  如何更新样式  一般用JS来更新样式  div.</description>
    </item>
    
    <item>
      <title>CSS盒模型是什么</title>
      <link>https://xiongzhongke.xyz/posts/css%E7%9B%92%E6%A8%A1%E5%9E%8B%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Sat, 21 Dec 2019 17:04:58 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/css%E7%9B%92%E6%A8%A1%E5%9E%8B%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>CSS 盒模型(Box Model) 所有HTML元素可以看作盒子，在CSS中，&amp;ldquo;box model&amp;quot;这一术语是用来设计和布局时使用。 CSS盒模型本质上是一个盒子，封装周围的HTML元素，盒模型由外到内依次包括：
 边距（margin） 边框（border） 内边距（padding） 内容（content）  盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。
两种盒模型  content-box  content-box width = 内容宽度
 border-box  border-box width = 内容宽度 + padding + border
border-box更好用。
* { box-sizing: border-box; } 练习：
http://js.jirengu.com/kuqowapere/3/edit?html,css,output
margin合并  那些情况会合并   父元素、子元素margin合并 子元素之间margin合并  阻止margin合并   父子合并用padding/border挡住 父子合并用overflow:hidden挡住 父子合并用display：flex， 兄弟合并可用inline-block消除  基本长度单位  px 像素 em相对于自身font-size的倍数 百分数 整数  颜色  十六进制#FF6600 RGBA颜色rgb（0，0，0）或者（0，0，0，1） hsl颜色hsl（360，100%，100%）  </description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>https://xiongzhongke.xyz/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Mon, 16 Dec 2019 19:34:25 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>1.a标签的用法  跳转外部页面 跳转内部锚点 跳转到邮箱或电话  首先输入以下命令，安装http-server或parcel，用来访问本地网页。
yarn global add http-server yarn global add parcel 安装后，用命令
http-server . -c-1 http-server -c-1 hs -c-1 或 parcel 文件名.html 来访问本地网页，不要双击HTML来访问自己本地的网页。
a标签的href属性 网址 &amp;lt;a href=&amp;#34;//xiongzhongke.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;超链接&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;https://xiongzhongke.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;超链接&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;http://xiongzhongke.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;超链接&amp;lt;/a&amp;gt; 路径 &amp;lt;a href=&amp;#34;/a/b/c.html&amp;#34;&amp;gt;我是C.html&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;./index.html&amp;#34;&amp;gt;我是index.html&amp;lt;/a&amp;gt; 伪协议 &amp;lt;a href=&amp;#34;javascript:;&amp;#34;&amp;gt;我要一个a标签，但什么也不做，不刷新也不置顶&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;#xzk&amp;#34;&amp;gt;自动跳转到&amp;#34;id=xzk&amp;#34;的p标签&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;mailto:775126135@qq.com&amp;#34;&amp;gt;发邮件给xzk&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;tel:15072026695&amp;#34;&amp;gt;打电话给我&amp;lt;/a&amp;gt; a标签的target属性 有_blank/_top/_parent/_self四个值
&amp;lt;a href=&amp;#34;http://xiongzhongke.xyz&amp;#34; target=&amp;#34;_blank&amp;#34;&amp;gt;在空白页面打开指定网址&amp;lt;/a&amp;gt; &amp;lt;body&amp;gt; &amp;lt;a href=&amp;#34;http://xiongzhongke.xyz&amp;#34; target=&amp;#34;_top&amp;#34;&amp;gt;有多个网页层层引用，在最顶层的网页打开指定网址&amp;lt;/a&amp;gt; &amp;lt;div&amp;gt; &amp;lt;iframe src=&amp;#34;我是引用的网页.html&amp;#34;&amp;gt; &amp;lt;/iframe&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;a href=&amp;#34;http://xiongzhongke.xyz&amp;#34; target=&amp;#34;_parent&amp;#34;&amp;gt;有多个网页层层引用，在本网页的上一层网页打开指定网址&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;#34;http://xiongzhongke.</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>https://xiongzhongke.xyz/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Thu, 12 Dec 2019 22:50:00 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>1.HTML 是谁发明的  Tim Berners-Lee，1990年发明。Tim Berners-Lee，1976年毕业于牛津大学物理系，1984年进入欧洲原子核研究会（CERN）粒子实验室工作。父母都是数学家，参与过世界上第一台商业电脑，曼切斯特1型（Manchester Mark I）的建造。2004年，英女皇伊丽莎白二世向Tim Berners-Lee颁发大英帝国爵级司令勋章。 李爵士发明html的初衷：为了使欧洲各国的核物理学家能通过计算机网络及时沟通传递信息进行合作研究。 如今Web之父Tim Berners-Lee已经功成名就。在www发明之初，tim预见到一旦他的浏览/编辑器问世，势必引起网络软件大战，使国际互联网陷入割据分裂，为了他所钟爱的WWW事业，他决定在WWW的百家争鸣中扮演一个技术直辖市的角色，而不是角逐财富的商人。与那些依托互联网一夜暴富之士相比，蒂姆仍然坚守在学术研究岗位上，那种视富贵如浮云的胸襟，真正表现了一个献身科学的学者风度。  2.HTML 起手应该写什么 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;ie=edge&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 3.常用的表章节的标签有哪些，分别是什么意思（h1~h6、section、article、main、aside 等等）  标题 h1~h6 章节 section 文章 article 段落 p 头部 header 脚部 footer 主要内容 main 旁支内容 aside 划分 div  练习
http://js.jirengu.com/nudezijeyu/1/edit?html,js,output
4.全局属性有哪些  class属性 用来对网页元素进行分类  &amp;lt;p class=&amp;#34;xzkexgirlfriend&amp;#34;&amp;gt;我的前女友：高圆圆&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;我最喜欢的演员：周星驰&amp;lt;/p&amp;gt; &amp;lt;p class=&amp;#34;xzkexgirlfriend&amp;#34;&amp;gt;我的前女友：新垣结衣&amp;lt;/p&amp;gt; 上面代码中，第一个&amp;lt;p&amp;gt;和第三个&amp;lt;p&amp;gt;是一类，因为它们的class属性相同。
 contenteditable属性 允许用户修改内容  &amp;lt;p contenteditable=&amp;#34;ture&amp;#34;&amp;gt; 鼠标点击，本句内容可以修改 &amp;lt;/p&amp;gt;  hidden属性 是一个布尔属性，表示当前网页元素不再跟页面相关，因此浏览器不会渲染这个元素。  &amp;lt;p hidden&amp;gt;本句不会显示在页面上。&amp;lt;/p&amp;gt;  id属性 是元素在网页内唯一的标识符，id属性值必须是全局唯一的，同一个页面不能有两个相同的id属性。  &amp;lt;p id=&amp;#34;xiongzhongke1&amp;#34;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p id=&amp;#34;xiongzhongke2&amp;#34;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p id=&amp;#34;xiongzhongke3&amp;#34;&amp;gt;&amp;lt;/p&amp;gt; id属性的值不能包含空格</description>
    </item>
    
    <item>
      <title>如何用hugo搭建个人博客</title>
      <link>https://xiongzhongke.xyz/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 08 Dec 2019 23:43:25 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>安装hugo 在官网上下载，并把hugo.exe路径放到PATH中
 brew install hugo hugo version    进入hugo官网，从step2开始抄代码，到step7，得到public目录
 hugo new site lcfjxzk.github.io-generator git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke echo &amp;lsquo;theme = &amp;ldquo;ananke&amp;rdquo;&amp;rsquo; &amp;raquo; config.toml hugo new posts/开博大吉.md #编辑博客内容 hugo server -D #Navigate to your new site at http://localhost:1313/. hugo -D #得到public目录    添加要写的博客，将内容部署到GitHub pages 上
 cd public git add . git commit -v git init git remote add origin git@github.</description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>https://xiongzhongke.xyz/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Sun, 08 Dec 2019 22:45:18 +0800</pubDate>
      
      <guid>https://xiongzhongke.xyz/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description>大家好，我的博客开通了，希望我能写出好文章给大家看。</description>
    </item>
    
  </channel>
</rss>